.guest-list-nav-tabs

  %ul.nav.nav-pills

    %li
      = link_to guest_lists_path do
        %i.icon-arrow-left
        back to all lists

    %li.active

      = link_to guest_list_path(@guest_list) do
        = @guest_list.owner.try(:full_name)
        \:
        = best_in_place @guest_list, :date,
          display_as: :friendly_date, activator: '.edit-date'
        = status_badge(@guest_list)

    - if can?(:edit_date, @guest_list)
      %li
        %a.edit-date(href='#') edit the date

- if @guest_list.pending?
  .alert
    %strong HEY!
    this list will not be available at the door until approved
- elsif @guest_list.draft? && !can?(:manage, GuestList)
  .alert.alert-info.centered
    %h2
      Editing Draft
    = simple_form_for(@guest_list) do |f|
      = f.hidden_field :published, value: 'true'
      %button.btn.btn-primary.btn-large
        submit for approval

.row-fluid
  .span9

    #guest-list-table
      %table.table.hero-unit

        %thead
          %th name
          %th plus
          %th
            tags
          - if can? :check_in_guest, Invitation
            %th
              %i.icon-check
              checked-in!

        %tbody
          - @guest_list.invitations.each do |i|
            %tr.invitation{ class: ('redeemed' if i.redeemed) }
              %td.name
                = link_to i.guest do
                  = i.guest.try(:full_name)
              %td
                - if can? :update_plus, @guest_list
                  = simple_form_for(i) do |f|
                    = f.input :plus, as: :select, collection: (0..50).to_a.reverse,
                      label: false
                - else
                  %span.badge
                    = i.plus

              %td
                -# tags
                - if can?(:tag, i)
                  = simple_form_for(i, remote: true) do |f|
                    .input-prepend
                      = f.input :tag_list,
                        url: autocomplete_tag_name_invitations_path,
                        as: :autocomplete, label: false,
                        input_html: { data: { delimiter: ',' } }
                    %button.btn.btn-mini.add-on quicksave tags
                - else
                  = i.tag_list

              - if can? :check_in_guest, i
                %td
                  = simple_form_for(i, remote: true) do |f|
                    = f.input :redeemed, label: false, class: 'checkable'

              - if can?(:destroy, i)
                %td
                  - if i.guest != @guest_list.owner
                    = button_to 'X', i, class: 'btn btn-danger btn-mini span12',
                      :confirm => 'Are you sure?', :method => :delete

    - if can? :manage, @guest_list
      %hr
      #guest-list-stats
        .row-fluid
          .span3
            %small
              %dl
                %dt
                  known distribution
                %dd
                  #{@guest_list.pct_female}% female

  .span3.guest-list-manage

    - if can? :add_more_guests, @guest_list
      .row-fluid
        = form_tag(guest_list_append_path(@guest_list), method: :post, class: 'form-horizontal') do
          .row-fluid
            %input#append-guests.guest-lookup(autocomplete='off' type='text'name='q')
          .row-fluid
            %button.btn.btn-block
              add more guests to list

    .row-fluid.actions

      - if @guest_list.pending? && !can?(:manage, GuestList)
        = simple_form_for(@guest_list) do |f|
          = f.hidden_field :published, value: 'false'
          %button.btn.btn-block.btn-large
            withdraw list

      - if can? :manage, @guest_list
        = simple_form_for(@guest_list) do |f|
          = f.hidden_field :approved, value: 'true'
          = f.hidden_field :published, value: 'true'
          %button.btn.btn-success.btn-block
            approve

        = simple_form_for(@guest_list) do |f|
          = f.hidden_field :approved, value: 'false'
          %button.btn.btn-warning.btn-block
            revoke

      - if can? :destroy, @guest_list
        = button_to 'delete this guest list', @guest_list, class: 'btn btn-mini btn-danger span12',
          :confirm => 'Are you sure?', :method => :delete

      -# LIST OF PENDING GUEST LISTS
      - if can? :manage, @guest_list
        .lead
          = pluralize GuestList.pending.count, 'list'
          awaiting approval
        = render 'list_by_date', guest_lists: GuestList.pending.alphabetic_by_date

%small
  created by
  = @guest_list.creator

= content_for :javascript do
  :coffeescript
    jQuery ->
      new window.VIP.GuestListShow
        $tokenInput: $('#append-guests')
      $(".best_in_place").best_in_place()

      # submit form to update invitation redemption status
      # when checkbox is changed
      $selectPlus = $('.select')
      $checkboxRedeemed = $('.boolean')

      $selectPlus.live('change', ->
        $(this).parents('form:first').submit()
      )
      $checkboxRedeemed.live('change', ->
        $(this).parents('form:first').submit()
      )

